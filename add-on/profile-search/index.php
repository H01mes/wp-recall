<?phprcl_enqueue_style('profilesearch',__FILE__);if(is_admin()):	add_action('admin_head','output_script_admin_sp');endif;		function output_script_admin_sp(){	wp_enqueue_script( 'jquery' );	wp_enqueue_script( 'script_admin_sp', addon_url('js/admin.js', __FILE__) );	}add_action('admin_menu', 'ps_options_page_rcl',30);function ps_options_page_rcl(){	add_submenu_page( 'manage-wprecall', 'Форма поиска', 'Форма поиска', 'manage_options', 'manage-profile-search', 'profile_search_manage_rcl');}function profile_search_manage_rcl(){global $wpdb;    add_sortable_scripts();	if(isset($_POST['save_search_profile'])&&wp_verify_nonce( $_POST['_wpnonce'], 'update-profile-search' )){		$get_fields = get_option( 'custom_profile_search_form' );		//$get_fields = unserialize( $get_fields);				$custom_pf = get_option( 'custom_profile_field' );		//$custom_pf = unserialize( $custom_pf);				$profile_field = $_POST['title_field'];		//if($show_defolt_field) update_option( 'show_defolt_field', $show_defolt_field );				if($profile_field){					$count_field = count($profile_field);			for($a=0;$a<$count_field;$a++){				if($profile_field[$a]){					if($a==0) $fields[$a]['relation'] = $_POST['relation'];					$fields[$a]['type'] = $_POST['type_field'][$a];					$fields[$a]['title'] = $profile_field[$a];																														if($_POST['all_value'][$a]==1) $fields[$a]['all_value'] = $_POST['all_value'][$a];					else $fields[$a]['all_value'] = 0;											if($_POST['prof_fields'][$a])						$fields[$a]['prof_fields'] = $_POST['prof_fields'][$a];										/*if($_POST['type_field'][$a]!='text'){						foreach($custom_pf as $c){							$slug = str_replace('-','_',$c['slug']);							if($slug!=$fields[$a]['prof_fields']) continue;										$fields[$a]['type'] = $c['type'];							$fields[$a]['value'] = $c['field_select'];						}					}*/															if($fields[$a]['prof_fields']=='name_user'||$fields[$a]['prof_fields']=='login_user'||$fields[$a]['prof_fields']=='description'){						$fields[$a]['type'] = 'text';					}									}else{									}			}		}				//$fields = serialize($fields);				$res = update_option( 'custom_profile_search_form', $fields );	}else{		$fields = get_option( 'custom_profile_search_form' );	}	$prf_fields = get_option( 'custom_profile_field' );	//$prf_fields = unserialize( $prf_fields);		$fileds_lst = '<select name="prof_fields[]">';        if($prf_fields){            foreach($prf_fields as $fld){                    $fileds_lst .= '<option value="'.$fld['slug'].'">'.$fld['title'].'</option>';            }        }	$fileds_lst .= '</select>';		//$fields = unserialize( $fields);		//print_r($fields);	$relation = 'OR';        	if($fields){				$n=0;		foreach((array)$fields as $custom_field){						if($n==0) $relation = $custom_field['relation'];						$type_field = '<select class="type_field" name="type_field[]">				<option value="text" '.selected($custom_field['type'],'text',false).'>Поле поиска</option>				<option value="select" '.selected($custom_field['type'],'select',false).'>Выпадающий список</option>				</select>';			$fileds_lst = '<select name="prof_fields[]">';			$fileds_lst .= '<option value="name_user" '.selected($custom_field['prof_fields'],'name_user',false).'>Поиск по Имени</option>';			$fileds_lst .= '<option value="login_user" '.selected($custom_field['prof_fields'],'login_user',false).'>Поиск по логину</option>';			$fileds_lst .= '<option value="description" '.selected($custom_field['prof_fields'],'description',false).'>Поиск по статусу</option>';			if($prf_fields){                            foreach($prf_fields as $fld){                                    $fileds_lst .= '<option value="'.$fld['slug'].'" '.selected($custom_field['prof_fields'],$fld['slug'],false).'>'.$fld['title'].'</option>';                            }                        }			$fileds_lst .= '</select>';						$field .= '			<li class="menu-item menu-item-edit-active">				<dl class="menu-item-bar">					<dt class="menu-item-handle">						<span class="item-title"><input type="text" size="34" name="title_field[]" class="field" value="'.$custom_field['title'].'"/></span>						<span class="item-controls">						<span class="item-type">Тип: '.$type_field.'</span>						<span class="item-order hide-if-js"></span>												<a id="edit-'.$custom_field['slug'].'" class="searchfield-item-edit item-edit" href="#" title="Изменить">edit</a>						</span>					</dt>				</dl>				<div class="menu-item-settings" style="display: none;">					<p id="content-0" class="link-to-original">Поле профиля: '.$fileds_lst.'</p>					<!--<p id="content-new-0" class="link-to-original">					<input type="checkbox" class="first-chek" '.checked($custom_field['all_value'],1,false).' name="all_value[]" value="1"/> предложить к выбору все доступные на данный момент значения					</p>-->					<p align="right"><a class="item-delete searchfield-submitdelete deletion" href="#">Удалить</a></p>					</div>								</li>';						$n++;			$textarea_select = '';		}	}else{				$field = '<li class="menu-item menu-item-edit-active">				<dl class="menu-item-bar">					<dt class="menu-item-handle">						<span class="item-title"><input type="text" size="34" name="title_field[]" class="field" value=""/></span>						<span class="item-controls">						<span class="item-type">Тип: <select id="new-0" class="type_field" name="type_field[]">						<option value="text">Поле поиска</option>						<option value="select">Выпадающий список</option>						</select></span>						</span>					</dt>				</dl>				<div class="menu-item-settings" style="display: block;">					<p id="content-0" class="link-to-original">Поле профиля: '.$fileds_lst.'</p>					<!--<p id="content-new-0" class="link-to-original">					<input type="checkbox" class="first-chek" name="show_all_value[]" value="1"/> предложить к выбору все доступные на данный момент значения					</p>-->													</div>								</li>';	}	$users_fields = '<style>	#inputs_search_fields textarea{width:100%;}  	#inputs_search_fields .menu-item-settings, 	#inputs_search_fields .menu-item-handle{padding-right:10px;width:100%;}	</style>	<h2>Поиск по полям профиля</h2>		<form class="nav-menus-php" action="" method="post">	'.wp_nonce_field('update-profile-search','_wpnonce',true,false).'	<h3>Произвольные поля формы поиска</h3>	<div id="inputs_search_fields" class="user_fields" style="width:550px;">	<p><select name="relation">		<option '.selected($relation,'OR',false).' value="OR">ИЛИ</option>		<option '.selected($relation,'AND',false).' value="AND">И</option>	</select> - Правило подбора по параметрам</p>	<ul id="sortable">	'.$field.'	</ul>		 </div>	 	 <p style="width:550px;"><input type="button" id="add_search_field"  class="button-secondary right" value="+ Добавить еще"></p>	 <input id="save_menu_footer" class="button button-primary menu-save" type="submit" value="Сохранить" name="save_search_profile">	 </form>	 <script>		jQuery(function(){			jQuery("#sortable").sortable();			return false;		});	 </script>	 ';	echo $users_fields;}function custom_profile_search_recall($type,$action=''){	global $wpdb;	$get_fields = get_option( 'custom_profile_search_form' );        $field = '';        		if($get_fields){			$field = '			<div id="users-profile-search" class="'.$type.'">			<form method="get" action="'.$action.'">';			foreach((array)$get_fields as $custom_field){								$name = $custom_field['prof_fields'];				$title = $custom_field['title'];				$type = $custom_field['type'];								$field .= '<div class="search-block">				<label>'.$title.'</label>';				                                if(isset($_GET[$name])) $name_user = $_GET[$name];                                else $name_user = '';                                				if($type=='text') $field .= '<input type="text" name="'.$name.'" value="'.$name_user.'" />';				if($type=='select'){					$vals = $wpdb->get_results("SELECT meta_value,meta_key FROM ".$wpdb->prefix."usermeta WHERE meta_key LIKE '$name' GROUP BY meta_value");					if($vals){                                                $cheks = array();						foreach($vals as $val){	                                                    if(!$val->meta_value) continue;                                                    if(is_serialized($val->meta_value)){                                                        $value = unserialize($val->meta_value);                                                        foreach($value as $v){                                                            $cheks[$v] = $v;                                                        }                                                        continue;                                                    }                                                    if(isset($_GET[$name])) $vl = $_GET[$name];                                                    else $vl = $_GET[$val->meta_key];                                                    $field_select .='<option '.selected($val->meta_value,$vl,false).' value="'.$val->meta_value.'">'.$val->meta_value.'</option>';						}                                                if($cheks){                                                    foreach($cheks as $chek){                                                        if(isset($_GET[$name])) $vl = $_GET[$name];                                                        else $vl = $_GET[$val->meta_key];                                                        $field_select .='<option '.selected($chek,$vl,false).' value="'.$chek.'">'.$chek.'</option>';                                                    }                                                }						$field .= '<select name="'.$name.'">						<option value="">Выбрать</option>						'.$field_select.'						</select>';					}				}                                //print_r($custom_field);                                if($type=='checkbox'){					$vals = $wpdb->get_results("SELECT meta_value,meta_key FROM ".$wpdb->prefix."usermeta WHERE meta_key LIKE '$name' GROUP BY meta_value");                                        					if($vals){                                           						foreach($vals as $val){	                                                    if(!$val->meta_value) continue;                                                                                                            $value = unserialize($val->meta_value);                                                    foreach($value as $v){                                                        $cheks[$v] = $v;                                                    }						}                                                                                                foreach($cheks as $chek){                                                    if(isset($_GET[$name])) $vl = $_GET[$name];                                                    else $vl = $_GET[$val->meta_key];                                                    $field_select .='<option '.selected($chek,$vl,false).' value="'.$chek.'">'.$chek.'</option>';                                                }                                                						$field .= '<select name="'.$name.'">						<option value="">Выбрать</option>						'.$field_select.'						</select>';					}				}				$field .= '</div>';				$field_select = '';			}			$field .= '<div class="search-submit"><input class="recall-button" name="search-user" type="submit" value="Найти"></div></form></div>';					}		return $field;}function get_short_form_sp($atts, $content = null){	extract(shortcode_atts(array(            'type' => 'vertical',             'action' => false	),	$atts));		return custom_profile_search_recall($type,$action);}add_shortcode('sp-form','get_short_form_sp');add_filter('users_search_form_rcl','custom_search_form_rcl');function custom_search_form_rcl($form){	return do_shortcode('[sp-form type="horizontal"]');}function get_array_search_sp(){	global $wpdb;	$get_fields = get_option( 'custom_profile_search_form' );	if($get_fields){            foreach((array)$get_fields as $custom_field){	                $name = $custom_field['prof_fields'];                $type = $custom_field['type'];                if(!isset($_GET[$name])) continue;                if($_GET[$name]&&$name=='name_user'){                        $args['meta_query'][] = array(                                          'key' => 'first_name',                                        'value' => $_GET[$name],                                          'compare' => 'LIKE',                                  );                        continue;                }                if($name=='login_user'){                        $args = array( 'search'=>'*'.$_GET[$name].'*');                        continue;                }                if($_GET[$name]){                        /*if ( false !== strpos($_GET[$name], $name) ){                                $val = $wpdb->get_var("SELECT meta_value FROM ".$wpdb->prefix."usermeta WHERE meta_key = '$_GET[$name]'");                                $args['meta_query'][] = array(                                          'key' => $_GET[$name],                                          'value' => $val,                                          'compare' => 'LIKE',                                  );                        }else{*/                                        $key = $wpdb->get_var("SELECT meta_key FROM ".$wpdb->prefix."usermeta WHERE meta_key LIKE '$name' AND meta_value LIKE '%$_GET[$name]%'");                    $args['meta_query'][] = array(                              'key' => $key,                              'value' => $_GET[$name],                              'compare' => 'LIKE',                      );                                            //}												                }            }            //print_r($args);            if($args){                    $args['meta_query']['relation'] = $get_fields[0]['relation'];            }        }        	return $args;	}add_filter('search_filter_rcl','get_array_search_sp');?>